{"version":3,"sources":["assets/images/logo.jpg","components/ScrollToTop/index.js","containers/HeaderNav/index.js","components/AppLayout/index.js","store/actions/index.js","store/actions/video.js","store/actions/api.js","store/reducers/api.js","containers/Sidebar/SidebarHeader/index.js","containers/Sidebar/SidebarFooter/index.js","containers/Sidebar/SidebarItem/index.js","containers/Sidebar/Subscriptions/Subscription/index.js","containers/Sidebar/Subscriptions/index.js","containers/Sidebar/index.js","components/InfiniteScroll/index.js","components/VideoGrid/VideoGridHeader/index.js","services/number/number-format.js","services/date/date-format.js","components/VideoPreview/index.js","components/VideoGrid/index.js","services/url/index.js","store/actions/watch.js","store/reducers/videos.js","store/api/youtube-api-response-types.js","containers/Home/HomeContent/index.js","containers/Home/index.js","components/VideoList/index.js","containers/Trending/index.js","store/actions/search.js","store/reducers/search.js","containers/Search/index.js","components/Video/index.js","components/Rating/index.js","components/Video/VideoMetadata/index.js","store/reducers/chanels.js","components/VideoInfoBox/index.js","store/actions/comment.js","store/reducers/comments.js","containers/Comments/CommentsHeader/CommentsHeader.js","containers/Comments/Comment/Comment.js","containers/Comments/AddComment/AddComment.js","containers/Comments/index.js","components/RelatedVideos/NextUpVideo/NextUpVideo.js","components/RelatedVideos/NextUpVideo/RelatedVideos.js","containers/Watch/WatchContent/index.js","containers/Watch/index.js","App.js","registerServiceWorker.js","store/reducers/index.js","store/api/youtube-api.js","store/sagas/videos.js","store/sagas/watch.js","store/sagas/comment.js","store/sagas/search.js","store/sagas/index.js","index.js","store/configureStore.js"],"names":["module","exports","ScrollToTop","prevProps","this","props","location","window","scrollTo","children","Component","withRouter","HeaderNav","state","query","onInputChange","e","setState","target","value","onSubmit","escapedSearchQuery","encodeURI","history","push","Menu","borderless","className","fixed","Item","header","to","Image","src","logo","size","Form","Field","Input","placeholder","action","onChange","position","Icon","name","avatar","AppLayout","REQUEST","SUCCESS","FAILURE","createRequestTypes","base","Error","reduce","acc","type","createAction","payload","MOST_POPULAR","mostPopular","request","amount","loadDescription","nextPageToken","success","response","failure","VIDEO_CATEGORIES","categories","MOST_POPULAR_BY_CATEGORY","mostPopularByCategory","youtubeLibraryLoaded","bind","initialState","libraryLoaded","getYoutubeLibraryLoaded","api","SidebarHeader","heading","title","toUpperCase","Header","SideBarFooter","Fragment","SidebarItem","highlight","shouldBeHighlighted","pathname","path","icon","label","includes","Subscription","rightElement","broadcasting","amountNewVideos","Subscriptions","Sidebar","vertical","stackable","Divider","InfiniteScroll","bottomReachedCallback","showLoader","onEnter","Loader","active","inline","VideoGridHeader","UNITS","getShortNumberString","number","digits","some","element","index","lowerBound","Math","pow","i","length","decimal","toFixed","toString","objMap","numbers","datePattern","timePattern","pattern","RegExp","getVideoDurationString","iso8601DurationString","match","slice","prev","next","idx","parseFloat","days","hours","minutes","seconds","secondsString","minutesString","accumulatedHours","padStart","join","TimeAgo","locale","en","timeAgo","VideoPreview","video","videoDuration","contentDetails","duration","viewAndTimeString","getFormattedViewAndTime","horizontal","expanded","description","snippet","search","thumbnails","medium","url","channelTitle","publicationDate","Date","publishedAt","statistics","viewCount","viewCountShort","format","VideoGrid","videos","gridItems","map","key","id","divider","hideDivider","getSearchParam","URLSearchParams","get","WATCH_DETAILS","details","videoId","channelId","VIDEO_DETAILS","videoDetails","byId","byCategory","related","reduceFetchMostPopularVideos","prevState","videoMap","items","accumulator","Object","keys","hasOwnProperty","totalResults","pageInfo","reduceFetchVideoCategories","categoryMapping","category","reduceFetchMostPopularVideosByCategory","responses","byCategoryMap","forEach","status","categoryId","groupVideosByIdAndCategory","result","reduceWatchDetails","find","r","kind","relatedEntry","relatedVideoIds","reduceRelatedVideosRequest","reduceVideoDetails","parsedVideos","filter","getMostPopular","getMostPopularVideos","createSelector","videosById","getVideoCategoryIds","cats","getVideosByCategory","videosByCategory","videoIds","getChannelId","videoCategoriesLoaded","videosByCategoryLoaded","getVideoById","getRelatedVideos","allMostPopularVideosLoaded","getMostPopularVideosNextPageToken","HomeContent","trendingVideos","getTrendingVideos","categoryGrids","getVideoGridsForCategories","mostPopularVideos","categoryTitles","categoryTitle","connect","Home","categoryIndex","fetchVideosByCategory","fetchCategoriesAndMostPopularVideos","videoCategories","categoryStartIndex","fetchMostPopularVideosByCategory","shouldShowLoader","fetchMostPopularVideos","fetchVideoCategories","dispatch","videoActions","bindActionCreators","VideoList","videoPreviews","getVideoPreviews","Trending","fetchMoreVideos","fetchTrendingVideos","loaderActive","SEARCH_FOR_VIDEOS","forVideos","searchQuery","reduceSearchForVideos","searchResults","item","results","concat","getSearchResults","getSearchNextPageToken","Search","searchForVideos","getSearchQuery","youtubeApiLoaded","searchActions","Video","embedUrl","frameBorder","allow","allowFullScreen","Rating","rating","likeCount","dislikeCount","amountLikes","amountDislikes","percentagePositiveRatings","Progress","percent","VideoMetadata","Number","toLocaleString","Button","basic","labelPosition","channelResponse","channels","channel","channelEntry","getChannel","VideoInfoBox","onToggleCollapseButtonClick","collapsed","iso8601DateString","descriptionParagraphs","getDescriptionParagraphs","getConfig","descriptionTextClass","buttonTitle","publishedAtString","parse","toDateString","buttonText","getSubscriberButtonText","channelThumbnail","circular","color","compact","onClick","videoDescription","split","paragraph","subscriberCount","React","COMMENT_THREAD","thread","byVideo","reduceCommentThread","res","newComments","prevCommentIds","ids","commentIds","byVideoComment","getCommentsForVideo","comment","comments","allComments","commentId","getCommentNextPageToken","CommentsHeader","amountComments","Comment","topLevelComment","authorProfileImageUrl","authorDisplayName","textOriginal","AddComment","TextArea","control","Comments","NextUpVideo","Checkbox","toggle","defaultChecked","RelatedVideos","nextUpVideo","relatedVideosPreviews","relatedVideo","WatchContent","relatedVideos","Watch","fetchMoreComments","fetchCommentThread","getVideoId","fetchWatchContent","fetchWatchDetails","watchActions","commentActions","App","script","document","createElement","onload","gapi","load","client","setApiKey","body","appendChild","loadYoutubeApi","component","exact","render","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","combineReducers","buildMostPopularVideosRequest","videoCategoryId","fields","buildApiRequest","part","chart","maxResults","regionCode","pageToken","buildVideoDetailRequest","buildChannelRequest","buildCommentThreadRequest","buildSearchRequest","q","buildRelatedVideosRequest","amountRelatedVideos","relatedToVideoId","requestMethod","params","properties","p","removeEmptyParams","resource","normalizedProps","substr","adjustedName","replace","prop","propArray","ref","pa","createResource","watchMostPopularVideos","watchVideoCategories","watchMostPopularVideosByCategory","take","fork","fetchEntity","takeEvery","requests","wrapper","ignoreErrors","call","all","put","fetchVideoDetails","watchWatchDetails","fn","shouldFetchChannelInfo","searchListResponse","relatedVideoId","videoDetailResponse","watchCommentThread","watchSearchForVideos","entity","args","ignoreErrorCallback","store","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","run","rootSaga","configureStore","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a32d643b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e5520ae2.jpg\";","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location && window) {\r\n      window.scrollTo(0,0)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.children\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","import React, { Component } from 'react'\r\nimport { Form, Icon, Image, Input, Menu } from 'semantic-ui-react';\r\nimport logo from '../../assets/images/logo.jpg';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './HeaderNav.scss';\r\nclass HeaderNav extends Component {\r\n  state = {\r\n    query: ''\r\n  }\r\n  render() {\r\n    return (\r\n      <Menu borderless className='top-menu' fixed='top'>\r\n        <Menu.Item header className='logo'>\r\n          <Link to=\"/\"><Image src={logo} size='tiny'/></Link>\r\n        </Menu.Item>\r\n        <Menu.Menu className=\"nav-container\">\r\n          <Menu.Item className=\"search-input\">\r\n            <Form onSubmit={this.onSubmit}>\r\n              <Form.Field>\r\n                <Input placeholder=\"search\" size='small' action='Go' value={this.state.query} onChange={this.onInputChange}/>\r\n              </Form.Field>\r\n            </Form>\r\n          </Menu.Item>\r\n          <Menu.Menu position='right'>\r\n            <Menu.Item>\r\n              <Icon className=\"header-icon\" name='video camera' size='large'/>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Icon className=\"header-icon\" name='grid layout' size='large'/>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Icon className=\"header-icon\" name='chat' size='large'/>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Icon className=\"header-icon\" name='alarm' size='large'/>\r\n            </Menu.Item>\r\n            <Menu.Item name='avatar'>\r\n              <Image src='https://via.placeholder.com/80x80' avatar/>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    )\r\n  }\r\n  onInputChange = e => {\r\n    this.setState({\r\n      query: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {\r\n    const escapedSearchQuery = encodeURI(this.state.query);\r\n    this.props.history.push(`/results?search_query=${escapedSearchQuery}`)\r\n  }\r\n}\r\n\r\nexport default withRouter(HeaderNav)\r\n","import React from 'react'\r\nimport  ScrollToTop  from '../ScrollToTop'\r\nimport HeaderNav from '../../containers/HeaderNav'\r\nimport './AppLayout.scss'\r\nconst AppLayout = ({children}) => {\r\n  return (\r\n    <ScrollToTop>\r\n      <div className=\"app-layout\">\r\n        <HeaderNav/>\r\n        {children}\r\n      </div>\r\n    </ScrollToTop>\r\n  )\r\n}\r\n\r\nexport default AppLayout\r\n","export const REQUEST = 'REQUEST';\r\nexport const SUCCESS = 'SUCCESS';\r\nexport const FAILURE = 'FAILURE';\r\n\r\nexport function createRequestTypes(base) {\r\n  if (!base) {\r\n    throw new Error('cannot create request type with base = \\'\\' or base = null');\r\n  }\r\n  return [REQUEST, SUCCESS, FAILURE].reduce((acc, type) => {\r\n    acc[type] = `${base}_${type}`;\r\n    return acc;\r\n  },{})\r\n}\r\n\r\nexport function createAction(type, payload = {}) {\r\n  return {\r\n    type,\r\n    ...payload\r\n  }\r\n}","import { createAction, createRequestTypes, REQUEST, SUCCESS, FAILURE } from './index';\r\n\r\nexport const MOST_POPULAR = createRequestTypes(\"MOST_POPULAR\")\r\n\r\nexport const mostPopular = {\r\n  request: (amount, loadDescription, nextPageToken) => createAction(MOST_POPULAR[REQUEST], { amount, loadDescription, nextPageToken }),\r\n  success: (response) => createAction(MOST_POPULAR[SUCCESS], { response }),\r\n  failure: (response) => createAction(MOST_POPULAR[FAILURE], {response}),\r\n}\r\n\r\nexport const VIDEO_CATEGORIES = createRequestTypes('VIDEO_CATEGORIES')\r\n\r\nexport const categories = {\r\n  request: () => createAction(VIDEO_CATEGORIES[REQUEST]),\r\n  success: (response) => createAction(VIDEO_CATEGORIES[SUCCESS], { response }),\r\n  failure: (response) => createAction(VIDEO_CATEGORIES[FAILURE], {response}),\r\n}\r\n\r\nexport const MOST_POPULAR_BY_CATEGORY = createRequestTypes('MOST_POPULAR_BY_CATEGORY');\r\n\r\nexport const mostPopularByCategory = {\r\n  request: (categories) => createAction(MOST_POPULAR_BY_CATEGORY[REQUEST], {categories}),\r\n  success: (response, categories) => createAction(MOST_POPULAR_BY_CATEGORY[SUCCESS], {response, categories}),\r\n  failure: (response) => createAction(MOST_POPULAR_BY_CATEGORY[FAILURE], response),\r\n};","import { createAction } from './index'\r\n\r\nexport const YOUTUBE_LIBRARY_LOADED = 'YOUTUBE_LIBRARY_LOADED';\r\n\r\nexport const youtubeLibraryLoaded = createAction.bind(null, YOUTUBE_LIBRARY_LOADED)","import { YOUTUBE_LIBRARY_LOADED } from '../actions/api'\r\n\r\nconst initialState = {\r\n  libraryLoaded: false,\r\n}\r\n\r\nexport default function (state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case YOUTUBE_LIBRARY_LOADED:\r\n      return {\r\n        libraryLoaded: true,\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getYoutubeLibraryLoaded = (state)=> state.api.libraryLoaded","import React from 'react'\r\nimport { Menu } from 'semantic-ui-react';\r\nimport './SideBarHeader.scss';\r\n\r\nconst SidebarHeader = (props) => {\r\n  const heading = props.title ? props.title.toUpperCase() : '';\r\n  return (\r\n    <Menu.Item>\r\n      <Menu.Header className='side-bar-header'>\r\n        {heading}\r\n      </Menu.Header>\r\n    </Menu.Item>\r\n  )\r\n}\r\n\r\nexport default SidebarHeader\r\n","import React from 'react';\r\nimport './SideBarFooter.scss'\r\n\r\nexport default function SideBarFooter() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='footer-block'>\r\n        <div>About Press Copyright</div>\r\n        <div>Creators Advertise</div>\r\n        <div>Developers +MyTube</div>\r\n        <div>Legal</div>\r\n      </div>\r\n      <div className='footer-block'>\r\n        <div>Terms Privacy</div>\r\n        <div>Policy & Safety</div>\r\n        <div>Test new features</div>\r\n      </div>\r\n      <div className='footer-block'>\r\n        <div>Дуже холодна зима цього року</div>\r\n      </div>\r\n      <div className='footer-block'>\r\n        <div>© Freeman - Сайт створенний, як навчальний проект з метою поглиблення моїх знань Реакту.</div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { Component } from 'react'\r\nimport { Icon, Menu } from 'semantic-ui-react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport './SideBarItem.scss';\r\n\r\nexport class SidebarItem extends Component {\r\n  render() {\r\n    const highlight= this.shouldBeHighlighted()? 'highlight-item': null\r\n    return (\r\n      <Link to={{ pathname: this.props.path }}>\r\n        <Menu.Item className={`sidebar-item ${highlight}`}>\r\n          <div className=\"sidebar-item-alignment-container\">\r\n            <span>\r\n              <Icon size='large' name={this.props.icon}/>\r\n            </span>\r\n            <span>{this.props.label}</span>\r\n          </div>\r\n        </Menu.Item>\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  shouldBeHighlighted() {\r\n    const { pathname } = this.props.location;\r\n    if (this.props.path=== '/') {\r\n      return pathname === this.props.path\r\n    }\r\n    return pathname.includes(this.props.path)\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(SidebarItem)\r\n","import React from 'react'\r\nimport { Icon, Image, Menu } from 'semantic-ui-react'\r\nimport './Subscription.scss';\r\n\r\nconst Subscription = (props) => {\r\n  let rightElement = null\r\n  const { broadcasting, amountNewVideos } = props;\r\n  if (broadcasting) {\r\n    rightElement = <Icon name='signal'/>\r\n  } else if(amountNewVideos) {\r\n    rightElement = <span className=\"new-videos count\">{amountNewVideos}</span>\r\n  }\r\n  return (\r\n    <Menu.Item>\r\n      <div className=\"subscription\">\r\n        <div>\r\n          <Image src='https://via.placeholder.com/28x28' avatar />\r\n          <span>{props.label}</span>\r\n        </div>\r\n        {rightElement}\r\n      </div>\r\n    </Menu.Item>\r\n  )\r\n}\r\n\r\nexport default Subscription\r\n","import React,{Component} from 'react'\r\nimport { Divider } from 'semantic-ui-react'\r\nimport SidebarHeader from './../SidebarHeader';\r\nimport Subscription from './Subscription/index';\r\n\r\nexport default class Subscriptions extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <SidebarHeader title='Subscriptions' />\r\n        <Subscription label ='MusicChannel' broadcasting />\r\n        <Subscription label ='Judo the best' amountNewVideos={10} />\r\n        <Subscription label ='CodingAddict' amountNewVideos={16} />\r\n        <Subscription label ='Україна та її міссця' amountNewVideos={130} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport SidebarHeader from './SidebarHeader/index';\r\nimport SidebarFooter from './SidebarFooter/index';\r\nimport SidebarItem from './SidebarItem';\r\nimport Subscriptions from './Subscriptions';\r\nimport { Divider, Menu } from 'semantic-ui-react';\r\nimport './SideBar.scss';\r\n\r\nexport default class Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      <Menu borderless vertical stackable fixed='left' className='side-nav'>\r\n        <SidebarItem path='/' label='Home' icon='home'/>\r\n        <SidebarItem path='/feed/trending' label='Trending' icon='fire'/>\r\n        <SidebarItem label='Followers' icon='spy' />\r\n        <Divider />\r\n        <SidebarHeader title='Library'/>\r\n        <SidebarItem label='History' icon='history' />\r\n        <SidebarItem label='Watch later' icon='clock' />\r\n        <SidebarItem label='Liked videos' icon='thumbs up' />\r\n        <Divider/>\r\n        <Subscriptions />\r\n        <SidebarHeader title='More from Youtube'/>\r\n        <SidebarItem label='Movies and Shows' icon='film' />\r\n        <SidebarItem label='Report history' icon='flag' />\r\n        <SidebarItem label='Help' icon='help circle' />\r\n        <SidebarItem label='Send feedback' icon='comment' />\r\n        <Divider />\r\n        <SidebarFooter/>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {Waypoint} from 'react-waypoint';\r\nimport {Loader} from 'semantic-ui-react';\r\nimport './InfiniteScroll.scss';\r\nconst InfiniteScroll = ({bottomReachedCallback,children,showLoader}) => {\r\n  return (\r\n    <>\r\n      {children}\r\n      <Waypoint onEnter={bottomReachedCallback}>\r\n        <div className=\"loader-container\">\r\n          <Loader active={showLoader} inline='centered'/>\r\n        </div>\r\n      </Waypoint>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InfiniteScroll\r\n","import React from 'react';\r\nimport './VideoGridHeader.scss';\r\n\r\nexport function VideoGridHeader(props) {\r\n  return (\r\n    <div className='video-grid-header'>\r\n      <span className='title'>{props.title}</span>\r\n    </div>\r\n  );\r\n}","const UNITS = ['K', 'M', 'B', 'T'];\n\n// https://stackoverflow.com/a/28608086/2328833\nexport function getShortNumberString(number) {\n  const shouldShowDecimalPlace = UNITS.some((element, index) => {\n    const lowerBound = Math.pow(1000, index + 1);\n    const upperBound = lowerBound + lowerBound * 10;\n    return  number > lowerBound && number < upperBound\n  });\n  const digits = shouldShowDecimalPlace ? 1 : 0;\n  for (let i = UNITS.length - 1; i >= 0; i--) {\n    const decimal = Math.pow(1000, i + 1);\n\n    if (number >= decimal) {\n      return (number / decimal).toFixed(digits) + UNITS[i];\n    }\n  }\n  return number.toString();\n}","const objMap = ['years', 'months','days', 'hours', 'minutes', 'seconds'];\nconst numbers = '\\\\d+(?:[\\\\.,]\\\\d{0,3})?';\nconst datePattern = `(${numbers}Y)?(${numbers}M)?(${numbers}D)?`;\nconst timePattern = `T(${numbers}H)?(${numbers}M)?(${numbers}S)?`;\nconst pattern = new RegExp(`P(?:${datePattern}(?:${timePattern})?)`);\n\nexport function parseISO8601TimePattern(durationString) {\n  // https://github.com/tolu/ISO8601-duration/blob/master/src/index.js\n  return durationString.match(pattern).slice(1).reduce((prev, next, idx) => {\n    prev[objMap[idx]] = parseFloat(next) || 0;\n    return prev\n  }, {});\n}\n\nexport function getPublishedAtDateString(iso8601DateString) {\n  if (!iso8601DateString) {\n    return '';\n  }\n  const date = new Date(Date.parse(iso8601DateString));\n  return date.toDateString();\n}\n\nexport function getVideoDurationString(iso8601DurationString) {\n  if (!iso8601DurationString || iso8601DurationString === '') {\n    return '';\n  }\n\n  // new Date(Date.parse(...)) doesn't work here\n  // therefore we are using our regex approach\n  let {days, hours, minutes, seconds} = parseISO8601TimePattern(iso8601DurationString);\n\n  let secondsString = seconds.toString();\n  let minutesString = minutes.toString();\n  let accumulatedHours = days * 24 + hours;\n\n  if (seconds < 10) {\n    secondsString = seconds.toString().padStart(2, '0');\n  }\n  if (minutes < 10 && hours !== 0) {\n    minutesString = minutesString.toString().padStart(2, '0');\n  }\n  if (!accumulatedHours) {\n    return [minutesString, secondsString].join(':');\n  } else {\n    return [accumulatedHours, minutesString, secondsString].join(':');\n  }\n}\n\n\n\n\n","import React, { Component } from 'react'\r\nimport {Image} from 'semantic-ui-react';\r\nimport './VideoPreview.scss';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport en from 'javascript-time-ago/locale/en';\r\nimport {getShortNumberString} from '../../services/number/number-format';\r\nimport {getVideoDurationString} from '../../services/date/date-format';\r\nimport { Link } from 'react-router-dom';\r\n\r\nTimeAgo.locale(en);\r\nconst timeAgo = new TimeAgo('en-US');\r\n\r\nexport class VideoPreview extends Component {\r\n  render() {\r\n    const { video } = this.props\r\n    if (!video) {\r\n      return <div/>\r\n    }\r\n\r\n    const duration = video.contentDetails ? video.contentDetails.duration : null;\r\n    const videoDuration = getVideoDurationString(duration);\r\n    const viewAndTimeString = VideoPreview.getFormattedViewAndTime(video);\r\n    const horizontal = this.props.horizontal ? 'horizontal' : null;\r\n    const expanded = this.props.expanded ? 'expanded' : null;\r\n    const description = this.props.expanded ? video.snippet.description : null;\r\n    return (\r\n        <Link to={{pathname: this.props.pathname, search: this.props.search}}>\r\n          <div className={`video-preview ${horizontal} ${expanded}`}>\r\n            <div className='image-container'>\r\n              <Image src={video.snippet.thumbnails.medium.url}/>\r\n              <div className='time-label'>\r\n              <span>{videoDuration}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='video-info'>\r\n            <div className={['semi-bold', 'show-max-two-lines', expanded].join(' ')}>{video.snippet.title}</div>\r\n              <div className='video-preview-metadata-container'>\r\n              <div className='channel-title'>{video.snippet.channelTitle}</div>\r\n              <div className='view-and-time'>{viewAndTimeString}</div>\r\n              <div className='show-max-two-lines'>{description}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n    );\r\n  }\r\n\r\n  static getFormattedViewAndTime(video) {\r\n    const publicationDate = new Date(video.snippet.publishedAt);\r\n    const viewCount = video.statistics ? video.statistics.viewCount : null;\r\n    if(viewCount) {\r\n      const viewCountShort = getShortNumberString(video.statistics.viewCount);\r\n      return `${viewCountShort} views • ${timeAgo.format(publicationDate)}`;\r\n    }\r\n    return '';\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './VideoGrid.scss';\r\nimport {VideoGridHeader} from \"./VideoGridHeader\";\r\nimport { Divider } from 'semantic-ui-react'\r\nimport {VideoPreview} from '../VideoPreview';\r\nconst VideoGrid = (props) => {\r\n  if (!props.videos|| !props.videos.length) {\r\n    return <div/>\r\n  }\r\n  const gridItems = props.videos.map(video => {\r\n    return (<VideoPreview video={video} key={video.id} pathname='/watch' search={`?v=${video.id}`}/>)\r\n  })\r\n\r\n  const divider = props.hideDivider ? null : <Divider/>\r\n  return (\r\n    <>\r\n      <VideoGridHeader title={props.title} />\r\n      <div className=\"video-grid\">\r\n        {gridItems}\r\n      </div>\r\n      {divider}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VideoGrid\r\n","export const getSearchParam = (location, name) => {\n  if (!location || !location.search) {\n    return null;\n  }\n  const searchParams = new URLSearchParams(location.search);\n  return searchParams.get(name);\n};","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\r\n\r\nexport const WATCH_DETAILS = createRequestTypes('WATCH_DETAILS');\r\nexport const details = {\r\n  request: (videoId, channelId) => createAction(WATCH_DETAILS[REQUEST], {videoId, channelId}),\r\n  success: (response, videoId) => createAction(WATCH_DETAILS[SUCCESS], {response, videoId}),\r\n  failure: (response) => createAction(WATCH_DETAILS[FAILURE], {response}),\r\n};\r\n\r\nexport const VIDEO_DETAILS = createRequestTypes('VIDEO_DETAILS');\r\nexport const videoDetails = {\r\n  request: () => {\r\n    throw Error('not implemented');\r\n  },\r\n  success: (response) => createAction(VIDEO_DETAILS[SUCCESS], {response}),\r\n  failure: (response) => createAction(VIDEO_DETAILS[FAILURE], {response}),\r\n};","import {MOST_POPULAR, VIDEO_CATEGORIES, MOST_POPULAR_BY_CATEGORY} from '../actions/video';\r\nimport { SUCCESS } from '../actions';\r\nimport { createSelector } from 'reselect';\r\nimport {getSearchParam} from '../../services/url';\r\nimport {SEARCH_LIST_RESPONSE, VIDEO_LIST_RESPONSE} from '../api/youtube-api-response-types';\r\nimport { VIDEO_DETAILS, WATCH_DETAILS } from '../actions/watch';\r\n\r\nexport const initialState = {\r\n  byId: {},\r\n  mostPopular: {},\r\n  categories: {},\r\n  byCategory: {},\r\n  related: {},\r\n};\r\nexport default function videos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case MOST_POPULAR[SUCCESS]:\r\n      return reduceFetchMostPopularVideos(action.response, state);\r\n    case VIDEO_CATEGORIES[SUCCESS]:\r\n      return reduceFetchVideoCategories(action.response, state);\r\n    case MOST_POPULAR_BY_CATEGORY[SUCCESS]:\r\n      return reduceFetchMostPopularVideosByCategory(action.response, action.categories, state);\r\n    case WATCH_DETAILS[SUCCESS]:\r\n      return reduceWatchDetails(action.response, state);\r\n    case VIDEO_DETAILS[SUCCESS]:\r\n      return reduceVideoDetails(action.response, state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reduceFetchMostPopularVideos(response, prevState) {\r\n  const videoMap = response.items.reduce((accumulator, video) => {\r\n    accumulator[video.id] = video;\r\n    return accumulator;\r\n  }, {});\r\n\r\n  let items = Object.keys(videoMap);\r\n  if (response.hasOwnProperty('prevPageToken') && prevState.mostPopular) {\r\n    items = [...prevState.mostPopular.items, ...items];\r\n  }\r\n\r\n  const mostPopular = {\r\n    totalResults: response.pageInfo.totalResults,\r\n    nextPageToken: response.nextPageToken,\r\n    items,\r\n  };\r\n\r\n  return {\r\n    ...prevState,\r\n    mostPopular,\r\n    byId: {...prevState.byId, ...videoMap},\r\n  };\r\n}\r\n\r\nfunction reduceFetchVideoCategories(response, prevState) {\r\n  const categoryMapping = response.items.reduce((accumulator, category) => {\r\n    accumulator[category.id] = category.snippet.title;\r\n    return accumulator;\r\n  }, {});\r\n  return {\r\n    ...prevState,\r\n    categories: categoryMapping,\r\n  };\r\n}\r\n\r\nfunction groupVideosByIdAndCategory(response) {\r\n  const videos = response.items;\r\n  const byId = {};\r\n  const byCategory = {\r\n    totalResults: response.pageInfo.totalResults,\r\n    nextPageToken: response.nextPageToken,\r\n    items: [],\r\n  };\r\n\r\n  videos.forEach((video) => {\r\n    byId[video.id] = video;\r\n\r\n    const items = byCategory.items;\r\n    if(items && items) {\r\n      items.push(video.id);\r\n    } else {\r\n      byCategory.items = [video.id];\r\n    }\r\n  });\r\n\r\n  return {byId, byCategory};\r\n}\r\n\r\nfunction reduceFetchMostPopularVideosByCategory(responses, categories, prevState) {\r\n  let videoMap = {};\r\n  let byCategoryMap = {};\r\n  responses.forEach((response, index) => {\r\n    // ignore answer if there was an error\r\n    if (response.status === 400) return;\r\n\r\n    const categoryId = categories[index];\r\n    const {byId, byCategory} = groupVideosByIdAndCategory(response.result);\r\n    videoMap = {...videoMap, ...byId};\r\n    byCategoryMap[categoryId] = byCategory;\r\n  });\r\n\r\n  // compute new state\r\n  return {\r\n    ...prevState,\r\n    byId: {...prevState.byId, ...videoMap},\r\n    byCategory: {...prevState.byCategory, ...byCategoryMap},\r\n  };\r\n}\r\n\r\nfunction reduceRelatedVideosRequest(responses) {\r\n  const relatedVideosResponse = responses.find(r => r.result.kind === SEARCH_LIST_RESPONSE);\r\n  const {pageInfo, items, nextPageToken} = relatedVideosResponse.result;\r\n  const relatedVideoIds = items.map(video => video.id.videoId);\r\n\r\n  return {\r\n    totalResults: pageInfo.totalResults,\r\n    nextPageToken,\r\n    items: relatedVideoIds\r\n  };\r\n}\r\n\r\nfunction reduceWatchDetails(responses, prevState) {\r\n  const videoDetailResponse = responses.find(r => r.result.kind === VIDEO_LIST_RESPONSE);\r\n  // we know that items will only have one element\r\n  // because we explicitly asked for a video with a specific id\r\n  const video = videoDetailResponse.result.items[0];\r\n  const relatedEntry = reduceRelatedVideosRequest(responses);\r\n\r\n  return {\r\n    ...prevState,\r\n    byId: {\r\n      ...prevState.byId,\r\n      [video.id]: video\r\n    },\r\n    related: {\r\n      ...prevState.related,\r\n      [video.id]: relatedEntry\r\n    }\r\n  };\r\n}\r\n\r\nfunction reduceVideoDetails(responses, prevState) {\r\n  const videoResponses = responses.filter(response => response.result.kind === VIDEO_LIST_RESPONSE);\r\n  const parsedVideos = videoResponses.reduce((videoMap, response) => {\r\n    // we're explicitly asking for a video with a particular id\r\n    // so the response set must either contain 0 items (if a video with the id does not exist)\r\n    // or at most one item (i.e. the channel we've been asking for)\r\n    const video = response.result.items ? response.result.items[0] : null;\r\n    if (!video) {\r\n      return videoMap;\r\n    }\r\n    videoMap[video.id] = video;\r\n    return videoMap;\r\n  }, {});\r\n\r\n  return {\r\n    ...prevState,\r\n    byId: {...prevState.byId, ...parsedVideos},\r\n  };\r\n}\r\n\r\n// selectors\r\n\r\nconst getMostPopular = (state) => state.videos.mostPopular;\r\n\r\nexport const getMostPopularVideos = createSelector(\r\n  (state) => state.videos.byId,\r\n  (state) => state.videos.mostPopular,\r\n  (videosById, mostPopular) => {\r\n    if (!mostPopular || !mostPopular.items) {\r\n      return [];\r\n    }\r\n    return mostPopular.items.map(videoId => videosById[videoId]);\r\n  }\r\n)\r\n\r\nexport const getVideoCategoryIds = createSelector(\r\n  state => state.videos.categories,\r\n  (cats) => {\r\n    return Object.keys(cats||{})\r\n  }\r\n) \r\n\r\nexport const getVideosByCategory = createSelector(\r\n  state => state.videos.byCategory,\r\n  state => state.videos.byId,\r\n  state => state.videos.categories,\r\n  (videosByCategory, videosById, categories) => {\r\n    return Object.keys(videosByCategory || {}).reduce((accumulator, categoryId) => {\r\n      const videoIds = videosByCategory[categoryId].items;\r\n      const categoryTitle = categories[categoryId];\r\n      accumulator[categoryTitle] = videoIds.map(videoId => videosById[videoId]);\r\n      return accumulator;\r\n    }, {});\r\n  }\r\n)\r\n\r\nexport const getChannelId = (state, location, name) => {\r\n  const videoId = getSearchParam(location, name);\r\n  const video = state.videos.byId[videoId];\r\n  if (video) {\r\n    return video.snippet.channelId;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const videoCategoriesLoaded = createSelector(\r\n  state => state.videos.categories,\r\n  categories => {\r\n    return Object.keys(categories || {}).length !== 0;\r\n  }\r\n)\r\n\r\nexport const videosByCategoryLoaded = createSelector(\r\n  state => state.videos.byCategory,\r\n  (videosByCategory) => {\r\n    return Object.keys(videosByCategory || {}).length;\r\n  }\r\n);\r\n\r\nexport const getVideoById = (state, videoId) => {\r\n  return state.videos.byId[videoId]\r\n}\r\n\r\nconst getRelatedVideoIds = (state, videoId) => {\r\n  const related = state.videos.related[videoId];\r\n  return related ? related.items : [];\r\n};\r\nexport const getRelatedVideos = createSelector(\r\n  getRelatedVideoIds,\r\n  state => state.videos.byId,\r\n  (relatedVideoIds, videos) => {\r\n    if (relatedVideoIds) {\r\n      // filter kicks out null values we might have\r\n      return relatedVideoIds.map(videoId => videos[videoId]).filter(video => video);\r\n    }\r\n    return [];\r\n  });\r\n\r\n  export const allMostPopularVideosLoaded = createSelector(\r\n    [getMostPopular],\r\n    (mostPopular) => {\r\n      const amountFetchedItems = mostPopular.items ? mostPopular.items.length : 0;\r\n      return amountFetchedItems === mostPopular.totalResults;\r\n    }\r\n  );\r\n  \r\n  export const getMostPopularVideosNextPageToken = createSelector(\r\n    [getMostPopular],\r\n    (mostPopular) => {\r\n      return mostPopular.nextPageToken;\r\n    }\r\n  );\r\n  ","export const VIDEO_LIST_RESPONSE = 'youtube#videoListResponse';\nexport const CHANNEL_LIST_RESPONSE = 'youtube#channelListResponse';\nexport const SEARCH_LIST_RESPONSE = 'youtube#searchListResponse';\nexport const COMMENT_THREAD_LIST_RESPONSE = 'youtube#commentThreadListResponse';","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport InfiniteScroll from '../../../components/InfiniteScroll'\r\nimport VideoGrid from '../../../components/VideoGrid'\r\nimport { getMostPopularVideos,getVideosByCategory } from '../../../store/reducers/videos';\r\nimport './HomeContent.scss'\r\n\r\nconst AMOUNT_TRENDING_VIDEOS = 12;\r\n\r\nclass HomeContent extends Component {\r\n  render() {\r\n    const trendingVideos = this.getTrendingVideos()\r\n    const categoryGrids = this.getVideoGridsForCategories()\r\n    return (\r\n      <div className=\"home-content\">\r\n        <div className=\"responsive-video-grid-container\">\r\n          <InfiniteScroll bottomReachedCallback={(this.props.bottomReachedCallback)} showLoader={this.props.showLoader}>\r\n            <VideoGrid title='Trending' videos={trendingVideos} />\r\n            {categoryGrids}\r\n          </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getTrendingVideos() {\r\n    return this.props.mostPopularVideos.slice(0, AMOUNT_TRENDING_VIDEOS)\r\n  }\r\n\r\n  getVideoGridsForCategories() {\r\n    const categoryTitles = Object.keys(this.props.videosByCategory || {});\r\n    return categoryTitles.map((categoryTitle,index) => {\r\n      const videos = this.props.videosByCategory[categoryTitle];\r\n      // the last video grid element should not have a divider\r\n      const hideDivider = index === categoryTitles.length - 1;\r\n      return <VideoGrid title={categoryTitle} videos={videos} key={categoryTitle} hideDivider={hideDivider}/>;\r\n    });\r\n  }\r\n  \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    videosByCategory: getVideosByCategory(state),\r\n    mostPopularVideos: getMostPopularVideos(state)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(HomeContent)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport * as videoActions from \"../../store/actions/video\";\r\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\r\nimport Sidebar  from '../Sidebar'\r\nimport HomeContent from './HomeContent/index';\r\nimport './Home.scss';\r\nimport { getVideoCategoryIds,videoCategoriesLoaded,videosByCategoryLoaded } from '../../store/reducers/videos';\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    categoryIndex: 0\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.youtubeLibraryLoaded) {\r\n      this.fetchCategoriesAndMostPopularVideos()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\r\n      this.fetchCategoriesAndMostPopularVideos();\r\n    } else if (this.props.videoCategories !== prevProps.videoCategories) {\r\n      this.fetchVideosByCategory();\r\n    }\r\n  }\r\n\r\n  fetchVideosByCategory() {\r\n    const categoryStartIndex = this.state.categoryIndex;\r\n    const categories = this.props.videoCategories.slice(categoryStartIndex, categoryStartIndex + 3);\r\n    this.props.fetchMostPopularVideosByCategory(categories);\r\n    this.setState(prevState => {\r\n      return {\r\n        categoryIndex: prevState.categoryIndex + 3,\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Sidebar />\r\n        <HomeContent bottomReachedCallback={this.bottomReachedCallback} showLoader={this.shouldShowLoader()}/>\r\n      </>\r\n    )\r\n  }\r\n  fetchCategoriesAndMostPopularVideos() {\r\n    this.props.fetchMostPopularVideos();\r\n    this.props.fetchVideoCategories();\r\n  }\r\n\r\n  bottomReachedCallback = () => {\r\n    if (!this.props.videoCategoriesLoaded) {\r\n      return\r\n    }\r\n    this.fetchVideosByCategory()\r\n  }\r\n\r\n  shouldShowLoader() {\r\n    if (this.props.videoCategoriesLoaded && this.props.videosByCategoryLoaded) {\r\n      return this.state.categoryIndex < this.props.videoCategories.length;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\r\n    videoCategories: getVideoCategoryIds(state),\r\n    videoCategoriesLoaded: videoCategoriesLoaded(state),\r\n    videosByCategoryLoaded: videosByCategoryLoaded(state),\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const fetchMostPopularVideos = videoActions.mostPopular.request;\r\n  const fetchVideoCategories = videoActions.categories.request;\r\n  const fetchMostPopularVideosByCategory = videoActions.mostPopularByCategory.request\r\n  return bindActionCreators({fetchMostPopularVideos,fetchVideoCategories, fetchMostPopularVideosByCategory}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)","import React, { Component } from 'react'\r\nimport  SideBar  from '../../containers/Sidebar'\r\nimport  InfiniteScroll  from '../InfiniteScroll'\r\nimport {VideoPreview} from '../VideoPreview'\r\nimport './VideoList.scss'\r\nexport default class VideoList extends Component {\r\n  render() {\r\n    const videoPreviews = this.getVideoPreviews()\r\n    return (\r\n      <>\r\n        <SideBar />\r\n        <div className=\"video-list\">\r\n          <InfiniteScroll bottomReachedCallback={this.props.bottomReachedCallback} showLoader={this.props.showLoader}>\r\n            {videoPreviews}\r\n          </InfiniteScroll>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  getVideoPreviews() {\r\n    if (!this.props.videos || !this.props.videos.length) {\r\n      return null\r\n    }\r\n    const firstVideo = this.props.videos[0];\r\n    if (!firstVideo.snippet.description) {\r\n      return null\r\n    }\r\n\r\n    return this.props.videos.map(video => (\r\n      <VideoPreview horizontal={true} expanded={true} video={video} key={video.id} pathname={'/watch'} search={'?v=' + video.id}/>\r\n    ))\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {bindActionCreators} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as videoActions from '../../store/actions/video'\r\nimport {\r\n  allMostPopularVideosLoaded,\r\n  getMostPopularVideos,\r\n  getMostPopularVideosNextPageToken\r\n} from '../../store/reducers/videos';\r\nimport{getYoutubeLibraryLoaded} from '../../store/reducers/api'\r\nimport VideoList from './../../components/VideoList/index';\r\nclass Trending extends Component {\r\n  componentDidMount() {\r\n    this.fetchTrendingVideos()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.youtubeLibraryLoaded !== this.props.youtubeLibraryLoaded) {\r\n      this.fetchTrendingVideos();\r\n    }\r\n  }\r\n  render() {\r\n    const loaderActive = this.shouldShowLoader()\r\n    return (\r\n      <VideoList bottomReachedCallback={this.fetchMoreVideos} showLoader={loaderActive} videos={this.props.videos} />\r\n    )\r\n  }\r\n\r\n  fetchMoreVideos = () => {\r\n    const { nextPageToken } = this.props;\r\n    if (this.props.youtubeLibraryLoaded && nextPageToken) {\r\n      this.props.fetchMostPopularVideos(12, true, nextPageToken);\r\n    }\r\n  }\r\n\r\n  fetchTrendingVideos() {\r\n    if (this.props.youtubeLibraryLoaded) {\r\n      this.props.fetchMostPopularVideos(20, true);\r\n    }\r\n  }\r\n\r\n  shouldShowLoader() {\r\n    return !this.props.allMostPopularVideosLoaded;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    videos: getMostPopularVideos(state),\r\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\r\n    allMostPopularVideosLoaded: \r\n    allMostPopularVideosLoaded(state),\r\n    nextPageToken: getMostPopularVideosNextPageToken(state),\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const fetchMostPopularVideos = videoActions.mostPopular.request;\r\n  return bindActionCreators({fetchMostPopularVideos}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Trending)","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\r\n\r\nexport const SEARCH_FOR_VIDEOS = createRequestTypes('SEARCH_FOR_VIDEOS');\r\nexport const forVideos = {\r\n  request: (searchQuery, nextPageToken, amount) => createAction(SEARCH_FOR_VIDEOS[REQUEST], {searchQuery, nextPageToken, amount}),\r\n  success: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[SUCCESS], {response, searchQuery}),\r\n  failure: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[FAILURE],  {response, searchQuery}),\r\n};","import {SEARCH_FOR_VIDEOS} from '../actions/search';\r\nimport { REQUEST, SUCCESS } from '../actions';\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case SEARCH_FOR_VIDEOS[SUCCESS]:\r\n      return reduceSearchForVideos(action.response, action.searchQuery, state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reduceSearchForVideos(response, searchQuery, prevState) {\r\n  let searchResults = response.items.map(item => ({...item, id: item.id.videoId}));\r\n  if (prevState.query === searchQuery) {\r\n    const prevResults = prevState.results || [];\r\n    searchResults = prevResults.concat(searchResults);\r\n  }\r\n  return {\r\n    totalResults: response.pageInfo.totalResults,\r\n    nextPageToken: response.nextPageToken,\r\n    query: searchQuery,\r\n    results: searchResults\r\n  };\r\n}\r\n\r\n\r\n/*\r\n  Selectors\r\n */\r\nexport const getSearchResults = (state) => state.search.results;\r\nexport const getSearchNextPageToken = (state) => state.search.nextPageToken;","import React, { Component } from 'react'\r\nimport { getYoutubeLibraryLoaded } from '../../store/reducers/api';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { getSearchParam } from '../../services/url';\r\nimport * as searchActions from '../../store/actions/search';\r\nimport VideoList  from '../../components/VideoList';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {getSearchNextPageToken, getSearchResults} from '../../store/reducers/search';\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    return (\r\n      <VideoList bottomReachedCallback={this.bottomReachedCallback} showLoader={true} videos={this.props.searchResults}/>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.getSearchQuery()) {\r\n      this.props.history.push('/');\r\n    }\r\n    this.searchForVideos();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.youtubeApiLoaded !== this.props.youtubeApiLoaded) {\r\n      this.searchForVideos();\r\n    }\r\n  }\r\n\r\n  getSearchQuery() {\r\n    return getSearchParam(this.props.location, `search_query`)\r\n  }\r\n\r\n  searchForVideos() {\r\n    const searchQuery = this.getSearchQuery();\r\n    if (this.props.youtubeApiLoaded) {\r\n      this.props.searchForVideos(searchQuery);\r\n    }\r\n  }\r\n\r\n  bottomReachedCallback = () => {\r\n    if(this.props.nextPageToken) {\r\n      this.props.searchForVideos(this.getSearchQuery(), this.props.nextPageToken, 25);\r\n    }\r\n  };\r\n\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    youtubeApiLoaded: getYoutubeLibraryLoaded(state),\r\n    searchResults: getSearchResults(state),\r\n    nextPageToken: getSearchNextPageToken(state, props.location.search),\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const searchForVideos = searchActions.forVideos.request;\r\n  return bindActionCreators({searchForVideos}, dispatch)\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Search))","import React from 'react';\r\nimport './Video.scss';\r\n\r\nconst BASE_EMBED_URL = 'https://www.youtube.com/embed/';\r\n\r\nexport function Video(props) {\r\n  if(!props.id) {\r\n    return null;\r\n  }\r\n  //const embedUrl = `${BASE_EMBED_URL}${props.id}?autoplay=1`;\r\n  const embedUrl = `${BASE_EMBED_URL}${props.id}`;\r\n  return (\r\n    <div className='video-container'>\r\n      <div className=\"video\">\r\n        <iframe className='video-player' src={embedUrl} frameBorder='0'\r\n                allow='autoplay; encrypted-media' allowFullScreen title='video' />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './Rating.scss';\r\nimport {Icon, Progress} from \"semantic-ui-react\";\r\nimport {getShortNumberString} from '../../services/number/number-format';\r\n\r\nexport function Rating(props) {\r\n  let rating = null;\r\n  let likeCount = props.likeCount !== 0 ? props.likeCount : null;\r\n  let dislikeCount = null;\r\n\r\n  if(props.likeCount && props.dislikeCount) {\r\n    const amountLikes = parseFloat(props.likeCount);\r\n    const amountDislikes = parseFloat(props.dislikeCount);\r\n    const percentagePositiveRatings = 100.0 * (amountLikes / (amountLikes + amountDislikes));\r\n\r\n    // Now that we have calculated the percentage, we bring the numbers into a better readable format\r\n    likeCount = getShortNumberString(amountLikes);\r\n    dislikeCount = getShortNumberString(amountDislikes);\r\n    rating = <Progress percent={percentagePositiveRatings} size='tiny'/>;\r\n  }\r\n  return (\r\n    <div className='rating'>\r\n      <div >\r\n        <Icon name='thumbs outline up'/>\r\n        <span>{likeCount}</span>\r\n      </div>\r\n      <div >\r\n        <Icon name='thumbs outline down'/>\r\n        <span>{dislikeCount}</span>\r\n      </div>\r\n      {rating}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Button, Divider, Icon } from \"semantic-ui-react\";\r\nimport './VideoMetadata.scss';\r\nimport { Rating } from '../../Rating';\r\n\r\nexport function VideoMetadata(props) {\r\n  if (!props.video || !props.video.statistics) {\r\n    return <div/>;\r\n  }\r\n  const viewCount = Number(props.video.statistics.viewCount).toLocaleString();\r\n\r\n  return (\r\n    <div className='video-metadata'>\r\n      <h3>{props.video.snippet.title}</h3>\r\n      <div className='video-stats'>\r\n        <span>{viewCount} views</span>\r\n        <div className='video-actions' >\r\n          <Rating likeCount={props.video.statistics.likeCount}\r\n                  dislikeCount={props.video.statistics.dislikeCount}/>\r\n          <Button basic icon labelPosition='left'>\r\n            <Icon name='share'/>\r\n            Share\r\n          </Button>\r\n          <Button basic icon>\r\n            <Icon name='add circle' />\r\n          </Button>\r\n          <Button basic icon>\r\n            <Icon name='ellipsis horizontal' />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider/>\r\n    </div>\r\n  );\r\n}","import {VIDEO_DETAILS, WATCH_DETAILS} from '../actions/watch';\r\nimport {SUCCESS} from '../actions';\r\nimport { CHANNEL_LIST_RESPONSE } from '../api/youtube-api-response-types';\r\n\r\nconst initialState = {\r\n  byId: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case WATCH_DETAILS[SUCCESS]:\r\n      return reduceWatchDetails(action.response, state);\r\n    case VIDEO_DETAILS[SUCCESS]:\r\n      return reduceVideoDetails(action.response, state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reduceWatchDetails(responses, prevState) {\r\n  const channelResponse = responses.find(response => response.result.kind === CHANNEL_LIST_RESPONSE);\r\n  let channels = {};\r\n  if (channelResponse && channelResponse.result.items) {\r\n    // we know that there will only be one item\r\n    // because we ask for a channel with a specific id\r\n    const channel = channelResponse.result.items[0];\r\n    channels[channel.id] = channel;\r\n  }\r\n  return {\r\n    ...prevState,\r\n    byId: {\r\n      ...prevState.byId,\r\n      ...channels\r\n    }\r\n  };\r\n}\r\n\r\nfunction reduceVideoDetails(responses, prevState) {\r\n  const channelResponse = responses.find(response => response.result.kind === CHANNEL_LIST_RESPONSE);\r\n  let channelEntry = {};\r\n  if (channelResponse && channelResponse.result.items) {\r\n    // we're explicitly asking for a channel with a particular id\r\n    // so the response set must either contain 0 items (if a channel with the specified id does not exist)\r\n    // or at most one item (i.e. the channel we've been asking for)\r\n    const channel = channelResponse.result.items[0];\r\n    channelEntry =  {\r\n      [channel.id]: channel,\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...prevState,\r\n    byId: {\r\n      ...prevState.byId,\r\n      ...channelEntry,\r\n    }\r\n  };\r\n}\r\n\r\nexport const getChannel = (state, channelId) => {\r\n  if (!channelId) return null;\r\n  return state.channels.byId[channelId];\r\n};\r\n","import React from 'react';\r\nimport './VideoInfoBox.scss';\r\nimport {Image, Button, Divider} from 'semantic-ui-react';\r\nimport Linkify from 'react-linkify';\r\nimport {getPublishedAtDateString} from '../../services/date/date-format';\r\nimport { getShortNumberString } from '../../services/number/number-format';\r\n\r\nexport class VideoInfoBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.video || !this.props.channel) {\r\n      return <div />;\r\n    }\r\n\r\n    const descriptionParagraphs = this.getDescriptionParagraphs();\r\n    const { descriptionTextClass, buttonTitle } = this.getConfig();\r\n    const publishedAtString = getPublishedAtDateString(this.props.video.snippet.publishedAt);\r\n\r\n    const { channel } = this.props;\r\n    const buttonText = this.getSubscriberButtonText();\r\n    const channelThumbnail = channel.snippet.thumbnails.medium.url;\r\n    const channelTitle = channel.snippet.title;\r\n    return (\r\n      <div>\r\n        <div className='video-info-box'>\r\n          <Image className='channel-image' src={channelThumbnail} circular/>\r\n          <div className=\"video-info\">\r\n            <div className='channel-name'>{channelTitle}</div>\r\n            <div className='video-publication-date'>{publishedAtString}</div>\r\n          </div>\r\n          <Button className='subscribe' color='youtube'>{buttonText}</Button>\r\n          <div className=\"video-description\">\r\n            <div className={descriptionTextClass}>\r\n              {descriptionParagraphs}\r\n            </div>\r\n            <Button compact onClick={this.onToggleCollapseButtonClick}>{buttonTitle}</Button>\r\n          </div>\r\n        </div>\r\n        <Divider/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getDescriptionParagraphs() {\r\n    const videoDescription = this.props.video.snippet ? this.props.video.snippet.description : null;\r\n    if (!videoDescription) {\r\n      return null;\r\n    }\r\n    return videoDescription.split('\\n').map((paragraph, index) => <p key={index}><Linkify>{paragraph}</Linkify></p>);\r\n  }\r\n\r\n  getSubscriberButtonText() {\r\n    const {channel} = this.props;\r\n    const parsedSubscriberCount = Number(channel.statistics.subscriberCount);\r\n    const subscriberCount = getShortNumberString(parsedSubscriberCount);\r\n    return `Subscribe ${subscriberCount}`;\r\n  }\r\n\r\n  getConfig() {\r\n    let descriptionTextClass = 'collapsed';\r\n    let buttonTitle = 'Show More';\r\n    if (!this.state.collapsed) {\r\n      descriptionTextClass = 'expanded';\r\n      buttonTitle = 'Show Less';\r\n    }\r\n    return {\r\n      descriptionTextClass,\r\n      buttonTitle\r\n    };\r\n  }\r\n\r\n  onToggleCollapseButtonClick = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        collapsed: !prevState.collapsed\r\n      };\r\n    });\r\n  };\r\n}","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\r\n\r\nexport const COMMENT_THREAD = createRequestTypes('COMMENT_THREAD');\r\nexport const thread = {\r\n  request: (videoId, nextPageToken) => createAction(COMMENT_THREAD[REQUEST], {videoId, nextPageToken}),\r\n  success: (response, videoId) => createAction(COMMENT_THREAD[SUCCESS], {response, videoId}),\r\n  failure: (response) => createAction(COMMENT_THREAD[FAILURE], {response}),\r\n};","import {SUCCESS} from '../actions';\r\nimport { WATCH_DETAILS } from '../actions/watch';\r\nimport { COMMENT_THREAD_LIST_RESPONSE } from '../api/youtube-api-response-types';\r\nimport { createSelector } from 'reselect';\r\nimport {COMMENT_THREAD} from '../actions/comment';\r\nimport { getSearchParam } from '../../services/url';\r\n\r\nconst initialState = {\r\n  byVideo: {},\r\n  byId: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case COMMENT_THREAD[SUCCESS]:\r\n      return reduceCommentThread(action.response, action.videoId, state);\r\n    case WATCH_DETAILS[SUCCESS]:\r\n      return reduceWatchDetails(action.response, action.videoId, state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reduceWatchDetails(responses, videoId, prevState) {\r\n  const commentThreadResponse = responses.find(res => res.result.kind === COMMENT_THREAD_LIST_RESPONSE);\r\n  return reduceCommentThread(commentThreadResponse.result, videoId, prevState);\r\n}\r\n\r\nfunction reduceCommentThread(response, videoId, prevState) {\r\n  if (!response) {\r\n    return prevState;\r\n  }\r\n  const newComments = response.items.reduce((acc, item) => {\r\n    acc[item.id] = item;\r\n    return acc;\r\n  }, {});\r\n  // if we have already fetched some comments for a particular video\r\n  // we just append the ids for the new comments\r\n  const prevCommentIds = prevState.byVideo[videoId] ? prevState.byVideo[videoId].ids : [];\r\n  const commentIds = [...prevCommentIds, ...Object.keys(newComments)];\r\n\r\n  const byVideoComment = {\r\n    nextPageToken: response.nextPageToken,\r\n    ids: commentIds,\r\n  };\r\n  return {\r\n    ...prevState,\r\n    byId: {\r\n      ...prevState.byId,\r\n      ...newComments,\r\n    },\r\n    byVideo: {\r\n      ...prevState.byVideo,\r\n      [videoId]: byVideoComment,\r\n    }\r\n  };\r\n}\r\n\r\n// selectors\r\n\r\nconst getCommentIdsForVideo = (state, videoId) => {\r\n  const comment = state.comments.byVideo[videoId];\r\n  if (comment) {\r\n    return comment.ids;\r\n  }\r\n  return [];\r\n};\r\nexport const getCommentsForVideo = createSelector(\r\n  getCommentIdsForVideo,\r\n  state => state.comments.byId,\r\n  (commentIds, allComments) => {\r\n    return commentIds.map(commentId => allComments[commentId]);\r\n  }\r\n);\r\n\r\nconst getComment = (state, location) => {\r\n  const videoId = getSearchParam(location, 'v');\r\n  return state.comments.byVideo[videoId];\r\n};\r\nexport const getCommentNextPageToken = createSelector(\r\n  getComment,\r\n  (comment) => {\r\n    return comment ? comment.nextPageToken : null;\r\n  }\r\n);\r\n\r\n","import React from 'react';\nimport {Button, Icon} from \"semantic-ui-react\";\nimport './CommentsHeader.scss';\n\nexport function CommentsHeader(props) {\n  return (\n    <div className='comments-header'>\n      <h4>{props.amountComments} Comments</h4>\n      <Button basic compact icon labelPosition='left'>\n        <Icon name='align left' />\n        Sort by\n      </Button>\n    </div>\n  );\n}","import React from 'react';\nimport './Comment.scss';\nimport {Button, Image} from \"semantic-ui-react\";\nimport {Rating} from '../../../components/Rating';\n\nexport function Comment(props) {\n  if (!props.comment) {\n    return <div/>;\n  }\n  const topLevelComment = props.comment.snippet.topLevelComment;\n  const {authorProfileImageUrl, authorDisplayName, textOriginal} = topLevelComment.snippet;\n  const likeCount = topLevelComment.snippet.likeCount;\n\n  return (\n    <div className='comment'>\n      <Image className='user-image' src={authorProfileImageUrl} circular />\n      <div>\n        <div className='user-name'>{authorDisplayName}</div>\n        <span>{textOriginal}</span>\n        <div className='comment-actions'>\n          <Rating likeCount={likeCount}/> <Button size='mini' compact>REPLY</Button>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './AddComment.scss';\nimport {Form, Image, TextArea} from \"semantic-ui-react\";\n\nexport function AddComment() {\n  return (\n    <div className='add-comment'>\n      <Image className='user-image' src='https://via.placeholder.com/48x48' circular/>\n      <Form>\n        <Form.TextArea control={TextArea} placeholder='Add a public comment' />\n      </Form>\n    </div>\n  );\n}","import React from 'react';\r\nimport {CommentsHeader} from \"./CommentsHeader/CommentsHeader\";\r\nimport {Comment} from './Comment/Comment';\r\nimport { AddComment } from './AddComment/AddComment';\r\n\r\nexport class Comments extends React.Component {\r\n  render() {\r\n    if (!this.props.comments) {\r\n      return <div/>;\r\n    }\r\n\r\n    const comments = this.props.comments.map((comment) => {\r\n      return <Comment comment={comment} key={comment.id}/>\r\n    });\r\n\r\n    return(\r\n      <div>\r\n        <CommentsHeader amountComments={this.props.amountComments}/>\r\n        <AddComment key='add-comment'/>\r\n        {comments}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport './NextUpVideo.scss';\nimport {Checkbox, Divider} from \"semantic-ui-react\";\nimport {VideoPreview} from '../../VideoPreview';\n\nexport function NextUpVideo(props) {\n  return (\n    <React.Fragment>\n      <div className='next-up-container'>\n        <h4>Up next</h4>\n        <div className='up-next-toggle'>\n          <span>Autoplay</span>\n          <Checkbox toggle defaultChecked/>\n        </div>\n      </div>\n      <VideoPreview horizontal={true} video={props.video} pathname='/watch' search={`?v=${props.video.id}`}/>\n      <Divider/>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport {VideoPreview} from '../../VideoPreview';\nimport './RelatedVideos.scss';\nimport {NextUpVideo} from './NextUpVideo';\n\nexport function RelatedVideos(props) {\n  if (!props.videos || !props.videos.length) {\n    return <div className='related-videos'/>;\n  }\n\n  // safe because before we check if the array has at least one element\n  const nextUpVideo = props.videos[0];\n  const remainingVideos = props.videos.slice(1);\n\n  const relatedVideosPreviews = remainingVideos.map(relatedVideo => (\n      <VideoPreview video={relatedVideo}\n                    key={relatedVideo.id}\n                    pathname='/watch'\n                    search={`?v=${relatedVideo.id}`}\n                    horizontal={true}/>\n  ));\n\n  return (\n    <div className='related-videos'>\n      <NextUpVideo video={nextUpVideo}/>\n      {relatedVideosPreviews}\n    </div>\n  );\n}","import React, { Component } from 'react'\r\nimport InfiniteScroll from '../../../components/InfiniteScroll'\r\nimport { Video } from '../../../components/Video'\r\nimport { connect } from 'react-redux';\r\nimport {VideoMetadata} from '../../../components/Video/VideoMetadata';\r\nimport { getVideoById,getRelatedVideos } from '../../../store/reducers/videos'\r\nimport { getChannel } from '../../../store/reducers/chanels';\r\nimport { VideoInfoBox } from './../../../components/VideoInfoBox/index';\r\nimport { getCommentsForVideo } from '../../../store/reducers/comments'\r\nimport { Comments } from './../../Comments';\r\nimport {RelatedVideos} from '../../../components/RelatedVideos/NextUpVideo/RelatedVideos';\r\nimport './WatchContent.scss'\r\n\r\nclass WatchContent extends Component {\r\n  render() {\r\n    if (!this.props.videoId) {\r\n      return <div/>\r\n    }\r\n    return (\r\n      <InfiniteScroll bottomReachedCallback={this.props.bottomReachedCallback} showLoader={this.shouldShowLoader()}>\r\n        <div className=\"watch-grid\">\r\n          <Video className='video' id={this.props.videoId} />\r\n          <VideoMetadata className='metadata' video={this.props.video} />\r\n          <VideoInfoBox className=\"video-info-box\" video={this.props.video} channel={this.props.channel} />\r\n          <Comments className=\"comments\" comments={this.props.comments} />\r\n          <RelatedVideos className=\"related-videos\" videos={this.props.relatedVideos}/>\r\n        </div>\r\n      </InfiniteScroll>\r\n    )\r\n  }\r\n  shouldShowLoader() {\r\n    return !!this.props.nextPageToken;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    relatedVideos: getRelatedVideos(state, props.videoId),\r\n    video: getVideoById(state, props.videoId),\r\n    channel: getChannel(state, props.channelId),\r\n    comments: getCommentsForVideo(state, props.videoId)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(WatchContent)","import React, { Component } from 'react'\r\nimport WatchContent from './WatchContent';\r\nimport * as watchActions from '../../store/actions/watch';\r\nimport * as commentActions from '../../store/actions/comment';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getSearchParam} from '../../services/url';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getYoutubeLibraryLoaded } from '../../store/reducers/api';\r\nimport {getChannelId} from '../../store/reducers/videos';\r\nimport { connect } from 'react-redux';\r\nimport { getCommentNextPageToken } from './../../store/reducers/comments';\r\n\r\nclass Watch extends Component {\r\n  render() {\r\n    const videoId = this.getVideoId();\r\n    return (\r\n      <div>\r\n        <WatchContent videoId={videoId} channelId={this.props.channelId} bottomReachedCallback={this.fetchMoreComments} nextPageToken={this.props.nextPageToken}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.youtubeLibraryLoaded) {\r\n      this.fetchWatchContent();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\r\n      this.fetchWatchContent();\r\n    }\r\n  }\r\n\r\n  fetchWatchContent() {\r\n    const videoId = this.getVideoId();\r\n    if (!videoId) {\r\n      this.props.history.push('/');\r\n    }\r\n    this.props.fetchWatchDetails(videoId, this.props.channelId);\r\n  }\r\n\r\n  getVideoId() {\r\n    return getSearchParam(this.props.location, 'v');\r\n  }\r\n\r\n  fetchMoreComments = () => {\r\n    if (this.props.nextPageToken) {\r\n      this.props.fetchCommentThread(this.getVideoId(), this.props.nextPageToken)\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\r\n    channelId: getChannelId(state, props.location, 'v'),\r\n    nextPageToken: getCommentNextPageToken(state, props.location),\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const fetchWatchDetails = watchActions.details.request;\r\n  const fetchCommentThread = commentActions.thread.request\r\n  return bindActionCreators({fetchWatchDetails,fetchCommentThread}, dispatch)\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Watch))","import React, { Component } from 'react'\nimport  AppLayout from './components/AppLayout';\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport Home from './containers/Home'\nimport Trending from './containers/Trending'\nimport Search from './containers/Search'\nimport { youtubeLibraryLoaded } from './store/actions/api'\nimport { bindActionCreators } from 'redux';\nimport Watch from './containers/Watch';\n\nconst API_KEY = 'AIzaSyDgBVf3ldyb_Pkv89UEucXnfe6Fo2ZTaUA';\n\nexport class App extends Component {\n\n  loadYoutubeApi() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/client.js\";\n\n    script.onload = () => {\n      window.gapi.load('client', () => {\n        window.gapi.client.setApiKey(API_KEY);\n        window.gapi.client.load('youtube', 'v3', () => {\n          this.props.youtubeLibraryLoaded();\n        });\n      });\n    };\n\n    document.body.appendChild(script);\n  }\n  componentDidMount() {\n    this.loadYoutubeApi()  \n  }\n\n  render() {\n    return (\n      <AppLayout>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/results\" render={()=><Search key={this.props.location.key}/>}/>\n          <Route path=\"/watch\" render={() => <Watch key={this.props.location.key} />} />\n          <Route path='/feed/trending' component={Trending} />\n        </Switch>\n      </AppLayout>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({youtubeLibraryLoaded}, dispatch)\n}\n\nexport default withRouter(connect(null,mapDispatchToProps)(App))","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import apireducer from './api'\r\nimport { combineReducers } from 'redux';\r\nimport videosReducer from './videos'\r\nimport channelsReducer from './chanels';\r\nimport commentsReducer from './comments'\r\nimport searchReducer from './search'\r\nexport default combineReducers({\r\n  api: apireducer,\r\n  videos: videosReducer,\r\n  channels: channelsReducer,\r\n  comments: commentsReducer,\r\n  search: searchReducer\r\n})","export function buildVideoCategoriesRequest() {\n  return buildApiRequest('GET',\n    '/youtube/v3/videoCategories',\n    {\n      'part': 'snippet',\n      'regionCode': 'US'\n    }, null);\n}\n\nexport function buildMostPopularVideosRequest(amount = 12, loadDescription = false, nextPageToken, videoCategoryId = null) {\n  let fields = 'nextPageToken,prevPageToken,items(contentDetails/duration,id,snippet(channelId,channelTitle,publishedAt,thumbnails/medium,title),statistics/viewCount),pageInfo(totalResults)';\n  if (loadDescription) {\n    fields += ',items/snippet/description';\n  }\n  return buildApiRequest('GET',\n    '/youtube/v3/videos',\n    {\n      part: 'snippet,statistics,contentDetails',\n      chart: 'mostPopular',\n      maxResults: amount,\n      regionCode: 'US',\n      pageToken: nextPageToken,\n      fields,\n      videoCategoryId,\n    }, null);\n}\n\nexport function buildVideoDetailRequest(videoId) {\n  return buildApiRequest('GET',\n    '/youtube/v3/videos',\n    {\n      part: 'snippet,statistics,contentDetails',\n      id: videoId,\n      fields: 'kind,items(contentDetails/duration,id,snippet(channelId,channelTitle,description,publishedAt,thumbnails/medium,title),statistics)'\n    }, null);\n}\n\nexport function buildChannelRequest(channelId) {\n  return buildApiRequest('GET',\n    '/youtube/v3/channels',\n    {\n      part: 'snippet,statistics',\n      id: channelId,\n      fields: 'kind,items(id,snippet(description,thumbnails/medium,title),statistics/subscriberCount)'\n    }, null);\n}\n\nexport function buildCommentThreadRequest(videoId, nextPageToken) {\n  return buildApiRequest('GET',\n    '/youtube/v3/commentThreads',\n    {\n      part: 'id,snippet',\n      pageToken: nextPageToken,\n      videoId,\n    }, null);\n}\n\nexport function buildSearchRequest(query, nextPageToken, amount = 12) {\n  return buildApiRequest('GET',\n    '/youtube/v3/search',\n    {\n      part: 'id,snippet',\n      q: query,\n      type: 'video',\n      pageToken: nextPageToken,\n      maxResults: amount,\n    }, null);\n}\n\nexport function buildRelatedVideosRequest(videoId, amountRelatedVideos = 12) {\n  return buildApiRequest('GET',\n    '/youtube/v3/search',\n    {\n      part: 'snippet',\n      type: 'video',\n      maxResults: amountRelatedVideos,\n      relatedToVideoId: videoId,\n    }, null);\n}\n\n/*\n  Util - Youtube API boilerplate code\n */\nexport function buildApiRequest(requestMethod, path, params, properties) {\n  params = removeEmptyParams(params);\n  let request;\n  if (properties) {\n    let resource = createResource(properties);\n    request = window.gapi.client.request({\n      'body': resource,\n      'method': requestMethod,\n      'path': path,\n      'params': params\n    });\n  } else {\n    request = window.gapi.client.request({\n      'method': requestMethod,\n      'path': path,\n      'params': params\n    });\n  }\n  return request;\n}\n\nfunction removeEmptyParams(params) {\n  for (var p in params) {\n    if (!params[p] || params[p] === 'undefined') {\n      delete params[p];\n    }\n  }\n  return params;\n}\n\nfunction createResource(properties) {\n  var resource = {};\n  var normalizedProps = properties;\n  for (var p in properties) {\n    var value = properties[p];\n    if (p && p.substr(-2, 2) === '[]') {\n      var adjustedName = p.replace('[]', '');\n      if (value) {\n        normalizedProps[adjustedName] = value.split(',');\n      }\n      delete normalizedProps[p];\n    }\n  }\n  for (var prop in normalizedProps) {\n    // Leave properties that don't have values out of inserted resource.\n    if (normalizedProps.hasOwnProperty(prop) && normalizedProps[prop]) {\n      var propArray = prop.split('.');\n      var ref = resource;\n      for (var pa = 0; pa < propArray.length; pa++) {\n        var key = propArray[pa];\n        if (pa === propArray.length - 1) {\n          ref[key] = normalizedProps[prop];\n        } else {\n          ref = ref[key] = ref[key] || {};\n        }\n      }\n    }\n  }\n  return resource;\n}","import { call, fork, take,takeEvery, all, put } from 'redux-saga/effects'\r\nimport * as api from '../api/youtube-api';\r\nimport * as videoActions from '../actions/video';\r\nimport {REQUEST} from '../actions';\r\nimport { fetchEntity, ignoreErrors } from './index';\r\n\r\nexport function* watchMostPopularVideos() {\r\n  while (true) {\r\n    const { amount, loadDescription, nextPageToken } = yield take(videoActions.MOST_POPULAR[REQUEST]);\r\n    yield fork(fetchMostPopularVideos, amount,loadDescription,nextPageToken)\r\n  }\r\n}\r\n\r\nexport function* fetchMostPopularVideos(amount, loadDescription, nextPageToken) {\r\n  const request = api.buildMostPopularVideosRequest.bind(null, amount, loadDescription, nextPageToken)\r\n  yield fetchEntity(request, videoActions.mostPopular)\r\n}\r\n\r\nexport const fetchVideoCategories = fetchEntity.bind(null, api.buildVideoCategoriesRequest, videoActions.categories);\r\n\r\nexport function* watchVideoCategories() {\r\n  yield takeEvery(videoActions.VIDEO_CATEGORIES[REQUEST], fetchVideoCategories);\r\n}\r\n\r\nexport function* watchMostPopularVideosByCategory() {\r\n  while (true) {\r\n    const { categories } = yield take(videoActions.MOST_POPULAR_BY_CATEGORY[REQUEST]);\r\n    yield fork(fetchMostPopularVideosByCategory, categories)\r\n  }\r\n}\r\n\r\nexport function* fetchMostPopularVideosByCategory(categories) {\r\n  const requests = categories.map(category => {\r\n    const wrapper = ignoreErrors(api.buildMostPopularVideosRequest, 12, false, null, category);\r\n    return call(wrapper);\r\n  });\r\n  try {\r\n    const response = yield all(requests);\r\n    yield put(videoActions.mostPopularByCategory.success(response, categories))\r\n  } catch (error) {\r\n    yield put(videoActions.mostPopularByCategory.failure(error))\r\n  }\r\n}","import {fork, take, all, put, call} from 'redux-saga/effects';\r\nimport * as watchActions from '../actions/watch';\r\nimport {\r\n  buildVideoDetailRequest,\r\n  buildRelatedVideosRequest,\r\n  buildChannelRequest,\r\n  buildCommentThreadRequest\r\n} from '../api/youtube-api';\r\nimport {REQUEST} from '../actions';\r\nimport { SEARCH_LIST_RESPONSE, VIDEO_LIST_RESPONSE } from '../api/youtube-api-response-types';\r\n\r\nexport function* fetchWatchDetails(videoId, channelId) {\r\n  let requests = [\r\n    buildVideoDetailRequest.bind(null, videoId),\r\n    buildRelatedVideosRequest.bind(null, videoId),\r\n    buildCommentThreadRequest.bind(null, videoId)\r\n  ];\r\n\r\n  if (channelId) {\r\n    requests.push(buildChannelRequest.bind(null, channelId));\r\n  }\r\n\r\n  try {\r\n    const responses = yield all(requests.map(fn => call(fn)));\r\n    yield put(watchActions.details.success(responses, videoId));\r\n    yield call (fetchVideoDetails, responses, channelId === null);\r\n  } catch (error) {\r\n    yield put(watchActions.details.failure(error));\r\n  }\r\n}\r\n\r\nfunction* fetchVideoDetails(responses, shouldFetchChannelInfo) {\r\n  const searchListResponse = responses.find(response => response.result.kind === SEARCH_LIST_RESPONSE);\r\n  const relatedVideoIds =  searchListResponse.result.items.map(relatedVideo => relatedVideo.id.videoId);\r\n\r\n  const requests = relatedVideoIds.map(relatedVideoId => {\r\n    return buildVideoDetailRequest.bind(null, relatedVideoId);\r\n  });\r\n\r\n  if (shouldFetchChannelInfo) {\r\n    // we have to extract the video's channel id from the video details response\r\n    // so we can load additional channel information.\r\n    // this is only needed, when a user directly accesses .../watch?v=1234\r\n    // because then we only know the video id\r\n    const videoDetailResponse = responses.find(response => response.result.kind === VIDEO_LIST_RESPONSE);\r\n    const videos = videoDetailResponse.result.items;\r\n    if (videos && videos.length) {\r\n      requests.push(buildChannelRequest.bind(null, videos[0].snippet.channelId));\r\n    }\r\n  }\r\n  try {\r\n    const responses = yield all(requests.map(fn => call(fn)));\r\n    yield put(watchActions.videoDetails.success(responses));\r\n  } catch (error) {\r\n    yield put(watchActions.videoDetails.failure(error));\r\n  }\r\n}\r\n\r\nexport function* watchWatchDetails() {\r\n  while (true) {\r\n    const {videoId, channelId} = yield take(watchActions.WATCH_DETAILS[REQUEST]);\r\n    yield fork(fetchWatchDetails, videoId, channelId);\r\n  }\r\n}","import { fork, take } from 'redux-saga/effects';\r\nimport { REQUEST } from '../actions';\r\nimport * as commentActions from '../actions/comment'\r\nimport * as api from '../api/youtube-api';\r\nimport { fetchEntity } from './index';\r\n\r\nexport function* fetchCommentThread(videoId, nextPageToken) {\r\n  const request = api.buildCommentThreadRequest.bind(null, videoId, nextPageToken);\r\n  yield fetchEntity(request, commentActions.thread, videoId);\r\n}\r\n\r\n// watchers\r\n\r\nexport function* watchCommentThread() {\r\n  while(true) {\r\n    const { videoId, nextPageToken } = yield take(commentActions.COMMENT_THREAD[REQUEST]);\r\n    yield fork(fetchCommentThread, videoId, nextPageToken);\r\n  }\r\n}","import * as searchActions from '../actions/search';\r\nimport {REQUEST} from '../actions';\r\nimport {fork, take} from 'redux-saga/effects';\r\nimport * as api from '../api/youtube-api';\r\nimport { fetchEntity } from './index';\r\n\r\nexport function* searchForVideos(searchQuery, nextPageToken, amount) {\r\n  const request = api.buildSearchRequest.bind(null, searchQuery, nextPageToken, amount);\r\n  yield fetchEntity(request, searchActions.forVideos, searchQuery);\r\n}\r\n\r\n// watchers\r\n\r\nexport function* watchSearchForVideos() {\r\n  while (true) {\r\n    const { searchQuery, amount, nextPageToken } = yield take(searchActions.SEARCH_FOR_VIDEOS[REQUEST]);\r\n    yield fork(searchForVideos, searchQuery, nextPageToken, amount);\r\n  }\r\n}","import { all, call, put,fork } from 'redux-saga/effects';\r\nimport { watchMostPopularVideos, watchVideoCategories, watchMostPopularVideosByCategory } from './videos';\r\nimport {watchWatchDetails} from './watch';\r\nimport {watchCommentThread} from './comment';\r\nimport {watchSearchForVideos} from './search';\r\nexport default function* (){\r\n  yield all([\r\n    fork(watchMostPopularVideos),\r\n    fork(watchVideoCategories),\r\n    fork(watchMostPopularVideosByCategory),\r\n    fork(watchWatchDetails),\r\n    fork(watchCommentThread),\r\n    fork(watchSearchForVideos),\r\n  ]);\r\n}\r\n\r\nexport  function* fetchEntity(request,entity, ...args){\r\n  try {\r\n    const response = yield call(request);\r\n    yield put(entity.success(response.result, ...args))\r\n  } catch (err) {\r\n    yield put(entity.failure(err, ...args))\r\n  }\r\n}\r\n\r\nexport function ignoreErrors(fn, ...args) {\r\n  return () => {\r\n    const ignoreErrorCallback = (response) => response;\r\n    return fn(...args).then(ignoreErrorCallback, ignoreErrorCallback);\r\n  };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport {configureStore} from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n   document.getElementById('root'));\nregisterServiceWorker();","import { applyMiddleware, createStore, compose } from 'redux'\r\nimport reducer from './reducers';\r\nimport  createSagaMiddleware  from 'redux-saga';\r\nimport rootSaga from './sagas'\r\n\r\nexport function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware()\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\n  sagaMiddleware.run(rootSaga)\r\n  return store;\r\n}"],"sourceRoot":""}